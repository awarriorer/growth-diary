(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{387:function(a,t,v){"use strict";v.r(t);var _=v(14),s=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"async-await的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-await的实现"}},[a._v("#")]),a._v(" Async await的实现")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("先"),t("RouterLink",{attrs:{to:"/js/async-await.html"}},[a._v("了解async await的用法")])],1),a._v(" "),t("h4",{attrs:{id:"async的作用是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async的作用是什么"}},[a._v("#")]),a._v(" Async的作用是什么？")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v("申明一个函数是异步的")]),a._v(" "),t("li",[a._v("返回一个"),t("code",[a._v("Promise")]),a._v("对象，"),t("code",[a._v("return Promise.resolve('函数内返回的值或者undefined')")])])]),a._v(" "),t("h4",{attrs:{id:"await在等待什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#await在等待什么"}},[a._v("#")]),a._v(" await在等待什么？")]),a._v(" "),t("ul",[t("li",[a._v("await 等待一个异步函数执行完成，await 只能在 async 函数中")]),a._v(" "),t("li",[a._v("await 是一个表达式，这个表达式的结果是promise对象或者其他值\n"),t("ul",[t("li",[a._v("如果等到的是一个直接变量，那么继续往下执行运算")]),a._v(" "),t("li",[a._v("如果等到的是一个promise，它会阻塞后面的代码，等待promise.resove的执行，并且拿到resove的值，作为的await的结果")])])])]),a._v(" "),t("h4",{attrs:{id:"已经有了promise-为什么还要-async-await"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已经有了promise-为什么还要-async-await"}},[a._v("#")]),a._v(" 已经有了Promise，为什么还要 Async await?")]),a._v(" "),t("p",[a._v("先"),t("RouterLink",{attrs:{to:"/js/promise.html"}},[a._v("了解Promsie和它的的优缺点")])],1),a._v(" "),t("p",[a._v("Async await的优势")]),a._v(" "),t("ul",[t("li",[a._v("语法简洁清晰")]),a._v(" "),t("li",[a._v("错误处理，可以直接用"),t("code",[a._v("try...catch")]),a._v("来捕获异常")]),a._v(" "),t("li",[a._v("添加条件判断，可"),t("code",[a._v("通过return")]),a._v("直接中断执行，更符合直觉")]),a._v(" "),t("li",[a._v("减少不必要的中间变量")]),a._v(" "),t("li",[a._v("更清晰明确的错误堆栈")]),a._v(" "),t("li",[a._v("方便调试，可以给每个异步动作添加断点")])]),a._v(" "),t("h4",{attrs:{id:"async-await的缺点是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-await的缺点是什么"}},[a._v("#")]),a._v(" async await的缺点是什么？")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Async/Await")]),a._v(" 并不能很好的支持异步并发")]),a._v(" "),t("li",[t("code",[a._v("async")]),a._v("默认返回"),t("code",[a._v("Promsie")]),a._v(",这意味着"),t("code",[a._v("Promise")]),a._v("中存在的问题，"),t("code",[a._v("async")]),a._v("也会遇到，最典型的是会静默吞掉异常。所以虽然"),t("code",[a._v("async/await")]),a._v("中可以通过"),t("code",[a._v("try...catch")]),a._v("捕获"),t("code",[a._v("await")]),a._v("中的异常，但是不得不给所有的"),t("code",[a._v("await")]),a._v("添加"),t("code",[a._v("try...catch")]),a._v("，否则"),t("code",[a._v("async")]),a._v("函数返回的只是一个执行了"),t("code",[a._v("reject")]),a._v("的"),t("code",[a._v("promsie")])]),a._v(" "),t("li",[a._v("因为兼容问题，需要babel编译，编译后的代码臃肿而简陋")])])])}),[],!1,null,null,null);t.default=s.exports}}]);