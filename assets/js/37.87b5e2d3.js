(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{339:function(v,_,l){"use strict";l.r(_);var t=l(14),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前篇"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前篇"}},[v._v("#")]),v._v(" 前篇")]),v._v(" "),_("h2",{attrs:{id:"什么是数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构"}},[v._v("#")]),v._v(" 什么是数据结构")]),v._v(" "),_("p",[v._v("举个例子: 给你一千本书，自建一个图书馆，你会如何摆放这些书")]),v._v(" "),_("ul",[_("li",[v._v("方案1: 随便摆放\n"),_("ul",[_("li",[v._v("优点：存放方便")]),v._v(" "),_("li",[v._v("缺点：找书要命")])])]),v._v(" "),_("li",[v._v("方案2: 按照字母表顺序摆放\n"),_("ul",[_("li",[v._v("优点：书的位置有规律可循")]),v._v(" "),_("li",[v._v("缺点：存书和和取书都需要或许全部图书信息后，按照规则计算书所在的位置")])])]),v._v(" "),_("li",[v._v("方案3: 分类型 + 字母表顺序摆放\n"),_("ul",[_("li",[v._v("优点：在方案二上做了一个分类的优化，从而找书的时候，先确定书所属类型，不用在全局搜索，大大减少了搜索范围")]),v._v(" "),_("li",[v._v("缺点：每个类型需要分配一定的空间，一个书架还是两个书架？如果空间分配不合理，可能会造成空间浪费和不足的情况")])])])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("数据结构是：数据对象(图书)在计算机(图书馆)中存储，组织的方式")])]),v._v(" "),_("h2",{attrs:{id:"数据结构可分为以下两部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构可分为以下两部分"}},[v._v("#")]),v._v(" 数据结构可分为以下两部分")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("逻辑结构: 指数据元素之间的逻辑关系，从逻辑关系上描述信息")]),v._v(" "),_("ul",[_("li",[v._v("线性结构(一对一)\n"),_("ul",[_("li",[v._v("顺序表")]),v._v(" "),_("li",[v._v("链表")]),v._v(" "),_("li",[v._v("栈")]),v._v(" "),_("li",[v._v("队列")])])]),v._v(" "),_("li",[v._v("非线性结构\n"),_("ul",[_("li",[v._v("集合(数据之间无关系)")]),v._v(" "),_("li",[v._v("树形结构(一对多)")]),v._v(" "),_("li",[v._v("图形结构(多对多)")])])])])]),v._v(" "),_("li",[_("p",[v._v("物理存储结构: 数据结构在计算机中的表示(又称映像)")]),v._v(" "),_("ul",[_("li",[v._v("顺序存储\n"),_("ul",[_("li",[v._v("所有的数据元素放在一段连续的存储空间中，并使逻辑上相邻的数据元素其对应的物理存储位置也是相邻的（即保证逻辑位置关系与物理位置关系的一致）。顺序存储结构通常借助程序设计语言中的数组来加以实现")])])]),v._v(" "),_("li",[v._v("链表存储\n"),_("ul",[_("li",[v._v("不需要将逻辑上相邻的元素存储在物理位置相邻的位置，也就是说数据元素的存储具有任意性。每个数据元素所对应的存储表示由两部分组成，一部分存储元素值本身，另一部分用于存放表示逻辑关系的指针。我们可以认为指针给出的是下一个数据元素的存储地址。")])])]),v._v(" "),_("li",[v._v("索引存储\n"),_("ul",[_("li",[v._v("在存储数据元素的同时还增加了一个索引表。索引表中的每一项包括关键字和地址，关键字是能够唯一标示一个数据元素的数据项，地址是指示数据元素的存储地址或者存储区域的首地址的")])])]),v._v(" "),_("li",[v._v("散列存储\n"),_("ul",[_("li",[v._v("也称为哈希存储，这种存储方式将数据元素存储在一个连续的区域，每一个数据元素的具体存储位置是根据该数据的关键字值，通过散列(哈希)函数直接计算出来的")])])])])])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("数据的逻辑结构,是从数据元素之间的逻辑关系来分析数据的，与数据的具体存储无关，是独立于计算机之外的。而数据的存储结构是依赖于计算机的，包括数据元素值在计算机中的存储表示和逻辑关系在计算机中的存储表示。")])])])}),[],!1,null,null,null);_.default=i.exports}}]);