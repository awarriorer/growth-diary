(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{155:function(t,n,e){"use strict";e.r(n);var s=e(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("h3",{attrs:{id:"日常跨域解决方案之-cros"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日常跨域解决方案之-cros","aria-hidden":"true"}},[t._v("#")]),t._v(" 日常跨域解决方案之(CROS)")]),e("p",[t._v("这是个相对较新，且比较省力的一个跨域方案。不会说话的我，直接用代码演示\nCORS，跨域资源共享(Cross-origin resource sharing)")]),e("p",[t._v("html")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n\t<meta charset="UTF-8">\n\t<title>cros示例</title>\n</head>\n<body>\n\t<button id="but">执行jsonp请求</button>\n\t\n\t<script type="text/javascript">\n\n\t\twindow.onload = function(){\n\t\t\tconsole.log("window.onload");\n\n\t\t\tlet but = document.querySelector("#but");\n\n\t\t\tbut.onclick = function(e){\n\t\t\t\tlet options = {\n\t\t\t\t\tmethods: \'get\',\n\t\t\t\t\turl: \'http://dev.cros.com/get-name\',\n\t\t\t\t};\n\n\t\t\t\trequest(options, function(res){\n\t\t\t\t\tconsole.log(\'cors...响应\');\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tfunction request(options, next){\n\t\t\tvar xhr = new XMLHttpRequest(); \n\t\t\tvar methods = options.methods.toLocaleUpperCase();\n\n\t\t\t// 异步传输\n\t\t\txhr.open(methods, options.url, true);\n\n\t\t\t//发送请求\n\t\t\txhr.send(null);\n\n\t\t\txhr.onreadystatechange = function() {//Call a function when the state changes.\n\t\t\t\tif(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\n\t\t\t\t\tlet response = xhr.responseText;\n\n\t\t\t\t\tresponse = JSON.parse(response);\n\n\t\t\t\t\t// 请求结束后,在此处写处理代码\n\t\t\t\t\tnext(response)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t<\/script>\n</body>\n</html>\n')])])]),e("p",[t._v("nodeJs")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var express = require('express');\nvar app     = express();\n\nvar resData = {\n\tstatus: 1,\n\tdata: 'Hi, this is uncle-yang.'\n}\n\n// 配置cros\napp.all('/get-name', function(req, res, next) {\n\t//来访的域名\n\tlet origin   = req.headers.origin;\n\t// 允许访问的白名单\n\tlet whitelist = [\n\t\t'http://dev.test.com',\n\t\t'http://dev.test2.com',\n\t\t'http://dev.test3.com',\n\t];\n\n\t// 判断是否在名单内\n\tif(whitelist.indexOf(origin) > -1){\n\t\tres.header('Access-Control-Allow-Origin', origin);  \n\t    res.header('Access-Control-Allow-Headers', 'X-Requested-With');  \n\t    res.header('Access-Control-Allow-Methods','PUT,POST,GET,DELETE,OPTIONS');  \n\t    res.header('Content-Type', 'application/json;charset=utf-8');  \t\t    \n\t}\n\t// 隐藏当前用的那种框架\n\tres.header('X-Powered-By','none')  \n\n\tnext();\n});\n\n// start server\nvar server = app.listen(3500, function(){\n\tvar host = server.address().address;\n  \tvar port = server.address().port;\n\n\tconsole.log('Example app listening at http://%s:%s', host, port);\n})\n")])])]),e("h4",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[t._v("#")]),t._v(" 小结")]),e("ul",[e("li",[t._v("本质\n"),e("ul",[e("li",[t._v("同源策略是浏览器的，并不是服务器的，服务器只要收到请求，就会响应")]),e("li",[t._v("跨域请求时，浏览器会自动在header中，加上origin='当前域名'")]),e("li",[t._v("如果服务器设置了同意当前域名访问的许可，才可以被访问")])])]),e("li",[t._v("缺点\n"),e("ul",[e("li",[t._v("需要浏览器支持，且兼容不是十分好，需要IE10+")])])]),e("li",[t._v("优点\n"),e("ul",[e("li",[t._v("支持各种请求，包括上传")]),e("li",[t._v("只需要后端进行简单配置，前端请求无差异,和日常ajax请求一样")])])])])])}],!1,null,null,null);n.default=r.exports}}]);